{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Estagio\\\\React\\\\React Web\\\\react-web-model\\\\src\\\\pages\\\\Users.js\",\n  _s = $RefreshSig$();\nimport \"../styles/Users.css\";\nimport mData from \"../MOCK_DATA.json\";\nimport { useReactTable, getCoreRowModel, flexRender } from \"@tanstack/react-table\";\nimport { useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  /*\r\n    \r\n    \"id\": 2,\r\n    \"name\": \"Arly\",\r\n    \"cpf\": \"191.343.968-19\",\r\n    \"username\": \"abelfitt1\",\r\n    \"status\": \"Ativo\"\r\n  \r\n    */\n\n  const data = useMemo(() => mData, []);\n\n  /** @type import('@tanstack/react-table').columnDef<any>*/\n  const columns = [{\n    header: \"ID\",\n    accessorKey: \"id\"\n  }, {\n    header: \"Nome\",\n    accessorKey: \"name\"\n  }, {\n    header: \"Cadastro Pessoal\",\n    accessorKey: \"cpf\"\n  }, {\n    header: \"Nome de usuário\",\n    accessorKey: \"username\"\n  }, {\n    header: \"Status\",\n    accessorKey: \"status\"\n  }];\n  const table = useReactTable({\n    data,\n    columns\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-users\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: flexRender(header.column.columnDef.header, header.getContext())\n        }, header.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, headerGroup.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flexRender()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"xkvmVVB3LyhnTn89eFwyyxgaeU8=\", false, function () {\n  return [useReactTable];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["mData","useReactTable","getCoreRowModel","flexRender","useMemo","jsxDEV","_jsxDEV","Users","_s","data","columns","header","accessorKey","table","className","children","getHeaderGroups","map","headerGroup","headers","column","columnDef","getContext","id","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","row","getVisibleCells","cell","_c","$RefreshReg$"],"sources":["C:/Users/mathe/OneDrive/Área de Trabalho/Estagio/React/React Web/react-web-model/src/pages/Users.js"],"sourcesContent":["import \"../styles/Users.css\";\r\nimport mData from \"../MOCK_DATA.json\";\r\nimport {\r\n  useReactTable,\r\n  getCoreRowModel,\r\n  flexRender,\r\n} from \"@tanstack/react-table\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst Users = () => {\r\n  /*\r\n    \r\n    \"id\": 2,\r\n    \"name\": \"Arly\",\r\n    \"cpf\": \"191.343.968-19\",\r\n    \"username\": \"abelfitt1\",\r\n    \"status\": \"Ativo\"\r\n  \r\n    */\r\n\r\n  const data = useMemo(() => mData, []);\r\n\r\n  /** @type import('@tanstack/react-table').columnDef<any>*/\r\n  const columns = [\r\n    {\r\n      header: \"ID\",\r\n      accessorKey: \"id\",\r\n    },\r\n    {\r\n      header: \"Nome\",\r\n      accessorKey: \"name\",\r\n    },\r\n    {\r\n      header: \"Cadastro Pessoal\",\r\n      accessorKey: \"cpf\",\r\n    },\r\n    {\r\n      header: \"Nome de usuário\",\r\n      accessorKey: \"username\",\r\n    },\r\n    {\r\n      header: \"Status\",\r\n      accessorKey: \"status\",\r\n    },\r\n  ];\r\n\r\n  const table = useReactTable({ data, columns });\r\n\r\n  return (\r\n    <div className=\"container-users\">\r\n      <table>\r\n        {table.getHeaderGroups().map((headerGroup) => (\r\n          <tr key={headerGroup.id}>\r\n            {headerGroup.headers.map((header) => (\r\n              <th key={header.id}>\r\n                {flexRender(\r\n                  header.column.columnDef.header,\r\n                  header.getContext()\r\n                )}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n        <tbody>\r\n          {table.getRowModel().rows.map((row) => (\r\n            <tr key={row.id}>\r\n              {row.getVisibleCells().map((cell) => (\r\n                <td>{flexRender()}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <td>1</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}