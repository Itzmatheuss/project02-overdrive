{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Estagio\\\\React\\\\React Web\\\\react-web-model\\\\src\\\\pages\\\\Users.js\",\n  _s = $RefreshSig$();\nimport \"../styles/Users.css\";\nimport mData from \"../MOCK_DATA.json\";\nimport { useReactTable, getCoreRowModel, flexRender } from \"@tanstack/react-table\";\nimport { useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  /*\r\n    \r\n    \"id\": 2,\r\n    \"name\": \"Arly\",\r\n    \"cpf\": \"191.343.968-19\",\r\n    \"username\": \"abelfitt1\",\r\n    \"status\": \"Ativo\"\r\n  \r\n    */\n\n  const data = useMemo(() => mData, []);\n\n  /** @type import('@tanstack/react-table').columnDef<any>*/\n  const columns = [{\n    header: \"ID\",\n    accessorKey: \"id\"\n  }, {\n    header: \"Nome\",\n    accessorKey: \"name\"\n  }, {\n    header: \"Cadastro Pessoal\",\n    accessorKey: \"cpf\"\n  }, {\n    header: \"Nome de usuário\",\n    accessorKey: \"username\"\n  }, {\n    header: \"Status\",\n    accessorKey: \"status\"\n  }];\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-users\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tr\",\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            children: flexRender(header.column.columnDef.header, header.getContext())\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tr\",\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td\",\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"xkvmVVB3LyhnTn89eFwyyxgaeU8=\", false, function () {\n  return [useReactTable];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["mData","useReactTable","getCoreRowModel","flexRender","useMemo","jsxDEV","_jsxDEV","Users","_s","data","columns","header","accessorKey","table","className","children","getHeaderGroups","map","headerGroup","headers","column","columnDef","getContext","id","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","row","getVisibleCells","cell","_c","$RefreshReg$"],"sources":["C:/Users/mathe/OneDrive/Área de Trabalho/Estagio/React/React Web/react-web-model/src/pages/Users.js"],"sourcesContent":["import \"../styles/Users.css\";\r\nimport mData from \"../MOCK_DATA.json\";\r\nimport {\r\n  useReactTable,\r\n  getCoreRowModel,\r\n  flexRender,\r\n} from \"@tanstack/react-table\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst Users = () => {\r\n  /*\r\n    \r\n    \"id\": 2,\r\n    \"name\": \"Arly\",\r\n    \"cpf\": \"191.343.968-19\",\r\n    \"username\": \"abelfitt1\",\r\n    \"status\": \"Ativo\"\r\n  \r\n    */\r\n\r\n  const data = useMemo(() => mData, []);\r\n\r\n  /** @type import('@tanstack/react-table').columnDef<any>*/\r\n  const columns = [\r\n    {\r\n      header: \"ID\",\r\n      accessorKey: \"id\",\r\n    },\r\n    {\r\n      header: \"Nome\",\r\n      accessorKey: \"name\",\r\n    },\r\n    {\r\n      header: \"Cadastro Pessoal\",\r\n      accessorKey: \"cpf\",\r\n    },\r\n    {\r\n      header: \"Nome de usuário\",\r\n      accessorKey: \"username\",\r\n    },\r\n    {\r\n      header: \"Status\",\r\n      accessorKey: \"status\",\r\n    },\r\n  ];\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    getCoreRowModel: getCoreRowModel(),\r\n  });\r\n\r\n  return (\r\n    <div className=\"container-users\">\r\n      <table className=\"table\">\r\n        <thead>\r\n          {table.getHeaderGroups().map((headerGroup) => (\r\n            <tr key={headerGroup.id} className=\"tr\">\r\n              {headerGroup.headers.map((header) => (\r\n                <th key={header.id} className=\"th\">\r\n                  {flexRender(\r\n                    header.column.columnDef.header,\r\n                    header.getContext()\r\n                  )}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {table.getRowModel().rows.map((row) => (\r\n            <tr key={row.id} className=\"tr\">\r\n              {row.getVisibleCells().map((cell) => (\r\n                <td key={cell.id} className=\"td\">\r\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}